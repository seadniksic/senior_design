syntax = "proto3";

message Joystick_Input
{
    // fields that are set to its defualt value (0) are not
    // serialized over the wire!!
    // solution?
    // https://embeddedproto.com/documentation/using-a-message/optional-fields/
    enum Buttons
    {
        NONE = 0; // first entry required to be zero
        BTN_A = 1;
        BTN_B = 2;
        BTN_X = 4;
        BTN_Y = 8;
        BTN_START = 16;
        BTN_SELECT = 32;
        DPAD_UP = 64;
        DPAD_DOWN = 128;
        DPAD_LEFT = 256;
        DPAD_RIGHT = 512;
        BTN_THUMBR = 1024;
        BTN_THUMBL = 2048;
        BTN_TR = 4096;
        BTN_TL = 8192;
    }

    optional Buttons button = 1; // bit per button
    optional sint32 LJOY_X = 2; // int16_t
    optional sint32 LJOY_Y = 3;
    optional sint32 RJOY_X = 4;
    optional sint32 RJOY_Y = 5;
    optional sint32 TR = 6; //uint8_t
    optional sint32 TL = 7;
}

message SLAM_Data
{
    // all fields are int16_t

    // linear acceleration 
    optional float lia_x = 1;
    optional float lia_y = 2;
    optional float lia_z = 3;

    // euler angles yaw, pitch, roll
    optional float eul_y = 4;
    optional float eul_p = 5;
    optional float eul_r = 6;

    // angles
    optional sint32 pan = 7;
    optional sint32 tilt = 8;
}

message GUI_Data
{
    enum Locomotion_Status
    {
        NONE = 0;
        CONTROLS_INHIBIT = 1;
        NORMAL_DRIVING_MODE = 2;
    }

    enum Device_Status
    {
        NONE_1 = 0;
        BNO_INIT_SUCCESS = 1;
        HTS_INIT_SUCCESS = 2;
    }

    optional sint32 cpu_temp = 1;   
    optional sint32 calib_status = 2; 
    optional sint32 hts_temp = 3; 
    optional sint32 hts_humidity = 4;
    optional sint32 batt_temp = 5;
    optional sint32 curr_servo_pan = 6; 
    optional sint32 curr_servo_tilt = 7; 
    optional sint32 home_servo_pan = 8; 
    optional sint32 home_servo_tilt = 9; 
    optional Locomotion_Status loco_status = 10; 
    
    optional Device_Status dev_status = 11;
    optional sint32 i2c_msg_failed = 12;
    optional sint32 i2c_msg_passed = 13;
    optional sint32 uart_msg_failed = 14;
    optional sint32 uart_msg_passed = 15;
    optional sint32 lost_sync_byte = 16; 
    optional sint32 reseting_comms = 17;
    
}